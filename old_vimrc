"curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"sudo add-apt-repository ppa:jonathonf/vim
"pip install pyvim

let mapleader = ","
let maplocalleader = "\\"

call plug#begin() "'C:\Bin\vimfiles\vim_plugged\autoload')
Plug 'sillybun/vim-repl'
Plug 'neoclide/coc.nvim', {'branch': 'release'}       " do CocInstall coc-metals, coc-python
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'ryanoasis/vim-devicons'                         " adds icons in nerdtree 
Plug 'itchyny/lightline.vim'                          " status tabline bottom

"Plug 'sheerun/vim-polyglot'                           " py syntax highlight
"Plug 'joshdick/onedark.vim'                           " Color Theme 
"Plug 'liuchengxu/vista.vim'                           " Show cTags

"Plug 'ctrlpvim/ctrlp.vim'                             " fuzzy find files
"Plug 'prettier/vim-prettier', {'do': 'yarn install'} " Not working in vim? or yarn issue
"Plug 'christoomey/vim-tmux-navigator'                " interphere w/ NERDTreeToggle <c-\>
"Plug 'morhetz/gruvbox'                                " colorscheme that came w/ init.vim 
"
"Plug 'tsony-tsonev/nerdtree-git-plugin'
"Plug 'airblade/vim-gitgutter'

call plug#end()

if has("win64")
  let g:python3_host_prog = $CONDA_PYTHON_EXE
  let g:repl_program = {
            \   'python': 'ipython',
            \   'vim': 'vim -e',
            \   'default': 'bash',
            \   }
endif

let g:repl_predefine_python = {
            \   'numpy': 'import numpy as np',
            \   'pandas': 'import pandas as pd',
            \   'matplotlib': 'from matplotlib import pyplot as plt'
            \   }
let g:repl_cursor_down = 1
let g:repl_python_automerge = 1
let g:repl_ipython_version = '7'
let g:repl_output_copy_to_register = "t"



let g:repl_position = 3

"___ keyMaps for vim-repl ____________________________________
nnoremap <leader>r :REPLToggle<Cr>
" ipdb to debug python script
nnoremap <localleader>\ :REPLToggle<Cr>
autocmd Filetype python nnoremap <F12> <Esc>:REPLDebugStopAtCurrentLine<Cr>
autocmd Filetype python nnoremap <F10> <Esc>:REPLPDBN<Cr>
autocmd Filetype python nnoremap <F11> <Esc>:REPLPDBS<Cr>
autocmd Filetype python nnoremap <F12> <Esc>:REPLDebugStopAtCurrentLine<Cr>
autocmd Filetype python nnoremap <F10> <Esc>:REPLPDBN<Cr>
autocmd Filetype python nnoremap <F11> <Esc>:REPLPDBS<Cr>

"___ For Scala _______________________________________________
"autocmd FileType json syntax match Comment +\/\/.\+$+ 
let g:repl_position = 0 " 0 bot 3 right
let g:sendtorepl_invoke_key = "<localleader>\\"
let g:repl_cursor_down = 1
let g:repl_python_automerge = 1
let g:repl_ipython_version  = '7'
" 0:Bottom,1:TOP  2:LEFT  3:RIGHT - where repl appears
let g:repl_stayatrepl_when_open = 0
let g:repl_program = { 
            \ 'python': ['python'],
            \ 'scala': [ $HOME . '/bin/mill_repl.sh'],
            \ 'default': ['bash'],
            \ 'lua': ['lua'],
            \ 'vim': ['vim -e']
            \ }
"            \ 'scala': ['sbt console'],
" https://github.com/sillybun/vim-repl/issues/84
tnoremap <C-n> <C-w>N
tnoremap <ScrollWheelUp> <C-w>Nk
tnoremap <ScrollWheelDown> <C-w>Nj

set laststatus=2
"ignore files in nerdtree
let nerdtreeignore=['\.pyc$', '\~$','^node_modules$']
map <C-\> :NERDTreeToggle<CR>

"inoremap jk <ESC>
"comments sections out by visual or by line 
vmap "" <plug>NERDCommenterToggle
nmap "" <plug>NERDCommenterToggle

"-- open NERDTree automatically
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * NERDTree

let g:NERDTreeGitStatusWithFlags = 1
"let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:NERDTreeGitStatusNodeColorization = 1

